from notification_manager import Messeger
import asyncio
import json
import time
import threading
from scraper_manager import get_x_page_element_image
from telegram import ReplyKeyboardMarkup, KeyboardButton, Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
ADMIN_ID = 643930225
user_ids = set()
old_image_element_link = 'https://pbs.twimg.com/profile_images/1822199929986510848/UYFSJ2NM.png'

# –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑–±–µ—Ä–µ–∂–µ–Ω—ñ ID
try:
    with open("user_ids.json", "r") as file:
        user_ids = set(json.load(file))
except FileNotFoundError:
    pass


def save_user_ids():
    with open("user_ids.json", "w") as file:
        json.dump(list(user_ids), file)


async def start(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    if user_id not in user_ids:
        user_ids.add(user_id)
        save_user_ids()

    if user_id == ADMIN_ID:
        keyboard = [
            [KeyboardButton("–°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤")],
            [KeyboardButton("–ü–æ–∫–∞–∑–∞—Ç–∏ –∞–≤–∞—Ç–∞—Ä–∫—É")]
        ]
        reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
        await update.message.reply_text("–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ, –∞–¥–º—ñ–Ω–µ!", reply_markup=reply_markup)
    else:
        await update.message.reply_text("–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ!")

async def send_curet_image(update: Update, context: CallbackContext):
    """–ù–∞–¥—Å–∏–ª–∞—î –ø–æ—Ç–æ—á–Ω—É –∞–≤–∞—Ç–∞—Ä–∫—É"""
    global old_image_element_link
    await update.message.reply_photo(photo=old_image_element_link, caption="–û—Å—å –ø–æ—Ç–æ—á–Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫–∞")

async def show_users(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    if user_id != ADMIN_ID:
        await update.message.reply_text("‚õî –î–æ—Å—Ç—É–ø –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–æ!")
        return

    users_list = "\n".join(map(str, user_ids))
    await update.message.reply_text(f"üìã –°–ø–∏—Å–æ–∫ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤:\n{users_list}")


async def handle_message(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    if user_id not in user_ids:
        user_ids.add(user_id)
        save_user_ids()


def check_avatar_changes():
    global old_image_element_link
    while True:
        try:
            # –í–∏–∫–æ–Ω—É—î–º–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏–π —Å–∫—Ä–∞–ø—ñ–Ω–≥
            image_element_link = get_x_page_element_image(
                "https://x.com/elonmusk/photo",
                'css-9pa8cd'
            )

            if image_element_link != old_image_element_link:
                print("üîÑ –í–∏—è–≤–ª–µ–Ω–æ –∑–º—ñ–Ω–∏! –í—ñ–¥–ø—Ä–∞–≤–ª—è—é –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è...")
                Messeger.send_telegram_message('', image_element_link)
                old_image_element_link = image_element_link
            else:
                print("‚è≥ –ê–≤–∞—Ç–∞—Ä –Ω–µ –∑–º—ñ–Ω–∏–≤—Å—è")

            time.sleep(5)  # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω—ñ 10 —Å–µ–∫—É–Ω–¥

        except Exception as e:
            print(f"üö® –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –∞–≤–∞—Ç–∞—Ä–∞: {str(e)}")


def main():
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
    application = Application.builder().token("7376099399:AAG5FoywNJGKoZ3GlUhSECXSVb3YotywZ88").build()

    # –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.Regex(r'^–°–ø–∏—Å–æ–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤$'), show_users))
    application.add_handler(MessageHandler(filters.Regex(r'^–ü–æ–∫–∞–∑–∞—Ç–∏ –∞–≤–∞—Ç–∞—Ä–∫—É$'), send_curet_image))
    application.add_handler(MessageHandler(filters.ALL, handle_message))

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–∫—Ä–∞–ø—ñ–Ω–≥ —É –æ–∫—Ä–µ–º–æ–º—É –ø–æ—Ç–æ—Ü—ñ
    threading.Thread(target=check_avatar_changes, daemon=True).start()

    # –°—Ç–∞—Ä—Ç –±–æ—Ç–∞
    application.run_polling(drop_pending_updates=True)


if __name__ == "__main__":
    main()
